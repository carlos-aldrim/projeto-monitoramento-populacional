services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_FLUSH_INTERVAL_MESSAGES: 10000

  producer:
    build: .
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    command: python producer.py

  consumer:
    build: .
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    command: python consumer.py

  consumer_raw_writer:
    build: .
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MAX_RAW_FILES: 10      
      RAW_RUN_SECONDS: 60
    volumes:
      - ./datalake/raw:/app/datalake/raw
    command: python consumer_raw_writer.py

  create-topics:
    build: .
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    command: python create_topics.py

  converter:
    build: .
    depends_on:
      - consumer_raw_writer
    volumes:
      - ./datalake/raw:/app/datalake/raw
      - ./datalake/processed:/app/datalake/processed
    command: python convert_to_parquet.py

  dw_loader:
    build: .
    depends_on:
      - converter
    volumes:
      - ./datalake/processed:/app/datalake/processed
      - ./datawarehouse:/app/datawarehouse
    command: python init_datawarehouse.py

  spark-transform:
    image: bitnami/spark:latest
    depends_on:
      - converter
    volumes:
      - ./datawarehouse:/app/datawarehouse
      - ./datalake:/app/datalake
      - ./tmp:/tmp/spark-temp
      - ./artifacts:/app/artifacts       # <-- Montagem do volume para artifacts
      - ./transform_data.py:/app/transform_data.py
    working_dir: /app
    command: spark-submit transform_data.py
